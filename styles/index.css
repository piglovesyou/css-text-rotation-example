@import "https://cdnjs.cloudflare.com/ajax/libs/github-fork-ribbon-css/0.2.3/gh-fork-ribbon.min.css";

:root {
    --placeholder-height: 40px;
}
html, body, body > * {
    height: 100%;
    background-color: #003;
    margin: 0;
    color: #eef;
}
.content {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.box {
    display: inline-block;
    width: 120px;
    position: absolute;
    left: 24px;
    bottom: 24px;
    box-sizing: border-box;
    padding: 8px;
}

.placeholder {
    display: inline-block;
    width: 80px;
    position: relative;
    height: var(--placeholder-height);
    box-sizing: border-box;
    vertical-align: middle;
    margin-left: 4px;
    margin-top: -3px; /* hacky adjustment */
}
.bordered .placeholder { outline: 1px deeppink solid; }

.item {
    display: inline-block;
    position: absolute;
    box-sizing: border-box;
    padding: 0 4px;
    line-height: calc(var(--placeholder-height) / 2);
    height: calc(var(--placeholder-height) / 2);
    top: calc(var(--placeholder-height) / 4);
    left: calc(var(--placeholder-height) / 4);
}
.bordered .item { outline: 1px DarkKhaki solid; }
.initial .item { opacity: 0; }
.initial .item:first-of-type { opacity: 1 }

.item-enter,
.item-exit,
.item-exit-done {
    transition:
            transform 800ms cubic-bezier(0.000, 0.50, 0.50, 1),
            opacity 400ms linear
;
}

/* entering */
.item,
.item-enter,
.item-exit-done {
    transform:
            perspective(80px)
            rotateX(-90deg)
            translate3d(0, calc(var(--placeholder-height) / 2), calc(var(--placeholder-height) / 2));
;
}
.not-bordered .item,
.not-bordered .item-enter,
.not-bordered .item-exit-done {
    opacity: 0;
}

/* entered */
.item-enter-active,
.initial .item:first-of-type {
    opacity: 1 !important;
    transform:
            perspective(100px)
            rotateX(0)
            translate3d(0, 0, 0)
            translateY(0);
;
}

/* exiting */
.item-exit {
    transform:
            perspective(100px)
            rotate3d(1, 0, 0, 90deg)
            translate3d(0, calc(var(--placeholder-height) / -2), calc(var(--placeholder-height) / 2))
;
}
.not-bordered .item-exit { opacity: 0; }
